version: "3"
services:
  zookeeper:
    container_name: cdc_zookeeper
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    networks:
      - cdc_network

  kafka1:
    container_name: cdc_kafka1
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka1
    ports:
      - "9091:9091"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - cdc_network
    links:
      - zookeeper

  kafdrop:
    container_name: cdc_kafdrop
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka1:19091"
    networks:
      - cdc_network
    links:
      - kafka1

  debezium:
    hostname: debezium
    container_name: cdc_debezium
    image: masterraf21/connect:latest
    ports:
      - 8083:8083
    links:
      - kafka1
      - postgres
    environment:
      BOOTSTRAP_SERVERS: "kafka1:19091"
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: "my_connect_configs"
      OFFSET_STORAGE_TOPIC: "my_connect_offsets"
      TOPIC_CREATION_ENABLE: "true"
    networks:
      - cdc_network

  postgres:
    image: debezium/postgres:13
    hostname: postgres
    container_name: cdc_postgres
    ports:
      - "5432:5432"
    environment:
      ACCEPT_EULA: Y
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tender
    networks:
      - cdc_network

networks:
  cdc_network:
    driver: bridge
